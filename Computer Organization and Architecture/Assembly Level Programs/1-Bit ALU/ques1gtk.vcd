$date
	Mon Oct 30 23:19:42 2017
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module t_alu $end
$var wire 1 ! z $end
$var wire 1 " result $end
$var wire 1 # flag2 $end
$var wire 1 $ cout $end
$var reg 1 % a $end
$var reg 1 & ainvert $end
$var reg 1 ' b $end
$var reg 1 ( binvert $end
$var reg 1 ) carryin $end
$var reg 2 * op [1:0] $end
$scope module s $end
$var wire 1 % a $end
$var wire 1 + a1 $end
$var wire 1 & ainvert $end
$var wire 1 ' b $end
$var wire 1 , b1 $end
$var wire 1 ( binvert $end
$var wire 1 ) carryin $end
$var wire 1 # flag2 $end
$var wire 2 - op [1:0] $end
$var reg 1 $ cout $end
$var reg 1 " result $end
$var reg 1 ! z $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 -
0,
0+
b0 *
0)
0(
0'
0&
0%
x$
0#
0"
1!
$end
#1000
1,
1'
#2000
0,
1#
1+
0'
1%
#3000
0!
1"
1,
0#
1'
#4000
1!
0"
0,
0+
0'
0%
b1 *
b1 -
#5000
0!
1"
1,
1'
#6000
0,
1#
1+
0'
1%
#7000
1,
0#
1'
#8000
0'
0%
b0 *
b0 -
1)
1(
1&
#9000
1!
0"
0,
1'
#10000
1,
0+
1#
0'
1%
#11000
0,
0#
1'
#12000
0!
1"
1,
1+
0'
0%
b1 *
b1 -
0)
#13000
0,
1'
#14000
1,
0+
1#
0'
1%
#15000
1!
0"
0,
0#
1'
#16000
1,
1!
1$
0"
0'
0%
b10 *
b10 -
1)
0&
#17000
0!
0$
1"
0,
1'
#18000
1,
0!
1$
1"
1#
1+
0'
1%
#19000
1!
0"
0,
0#
1'
#20000
0+
1!
0$
0"
0'
0%
0)
0(
#21000
0!
1"
1,
1'
#22000
0,
1#
1+
0'
1%
#23000
1!
1$
0"
1,
0#
1'
#24000
